// You are using Java
// Write a Java program to find the second largest element in a one-dimensional arr
import java.util.*;
import java.util.Scanner;
class Second_Max{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int num=sc.nextInt();
        int arr[]=new int[num];
        for(int i=0;i<num;i++){
            arr[i]=sc.nextInt();
        }
        int max=arr[0];
        int second_max=Integer.MAX_VALUE;
        for(int i=0;i<arr.length;i++){
          if(arr[i]>max){
              second_max=max; 
              max=arr[i];
          }else if(arr[i]<max && arr[i]>second_max){
              second_max=arr[i]; 
          } 
        }
        System.out.println(second_max);
    }
}
class Second_Maxx{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int num=sc.nextInt();
        int arr[]=new int[num];
        for(int i=0;i<num;i++){
            arr[i]=sc.nextInt();
        }
         Arrays.sort(arr);
        System.out.println(arr[num-2]);
    }
}


// You are using Java
// : Given an array and a number K, write a program to rotate the array to the right by K positions.
import java.util.*;
import java.util.Scanner;
class Second_Max{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int k=sc.nextInt();
        int arr[]=new int[n];
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        k=k%n;
        
        reverse(arr,0,n-1);
        reverse(arr,0,k-1);
        reverse(arr,k,n-1);
        
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
    }
    static void reverse(int[]arr,int start,int end){
        while(start<end){
        int temp=arr[start];
        arr[start]=arr[end];
        arr[end]=temp;
        start++;
        end--;
        }
    }
}


// You are using Java
// Write a program to move all zeros in an array to the end while maintaining the relative order of the non-zero elements.
import java.util.*;
import java.util.Scanner;
class Second_Max{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        int j=arr.length-1;
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        for(int i=0;i<arr.length;i++){
            if(arr[i]==0 && i<j){
                swap(arr,i,j);
                j--;
            }
        }
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
    }
    static void swap(int[] arr,int start,int end){
        int temp=arr[start];
        arr[start]=arr[end];
        arr[end]=temp;
    }
}


// You are using Java
// Write a Java program to check if a given array contains any duplicate elements. If any value appears at least twice in the array, return true; otherwise, return false.
import java.util.*;
import java.util.Scanner;
class Second_Max{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int arr[]=new int[n];
        int j=arr.length-1;
        for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
        }
        int count=0;
        
            if(containsDuplicate(arr)){
                System.out.println("True");
            }else{
               System.out.println("False"); 
            }
    }
    static boolean containsDuplicate(int[] arr) {
        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] == arr[j]) {
                    return true;
                }
            }
        }
        return false;
    }
}
